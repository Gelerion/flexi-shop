openapi: 3.0.1
info:
  title: FlexiShop Product Service API
  description: API documentation for the Product Service of FlexiShop
  version: 1.0.0
tags:
  - name: products
paths:
  /products:
    get:
      summary: Search Products
      description: Retrieves a list of products based on a search query
      operationId: searchProducts
      tags:
        - products
      parameters:
        - in: query
          name: filter
          style: deepObject
          explode: true
          schema:
            $ref: '#/components/schemas/ProductCriteria'
          required: false
          description: Filter products by any property and an operator
        - in: query
          name: q
          schema:
            type: string
          required: false
          description: Free text search query string
        - name: sort
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            example: "price"
        - name: order
          in: query
          description: Order of sorting
          required: false
          schema:
            type: string
            enum: [asc, desc]
            example: "asc"
      responses:
        '200':
          description: List of Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResource'
    post:
      summary: Create Product
      description: Creates a new product.
      operationId: createProduct
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductResource'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResource'
        '400':
          description: Invalid input
  /products/{productId}:
    get:
      summary: Get Product Details
      description: Retrieves detailed information about a product by its ID.
      operationId: getProduct
      tags:
        - products
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true
          description: ID of the product to retrieve
      responses:
        '200':
          description: Product Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResource'
        '404':
          description: Product not found
    patch:
      summary: Update Product
      description: Updates an existing product.
      operationId: updateProduct
      tags:
        - products
      parameters:
        - in: path
          name: productId
          schema:
            type: string
          required: true
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductResource'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResource'
        '400':
          description: Invalid input
        '404':
          description: Product not found
components:
  schemas:
    ProductResource:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          description: Unique identifier of the product
        name:
          type: string
          description: Name of the product
          x-field-extra-annotation: "@NotNull\n  @Size(min=5, max=200)"
        description:
          type: string
          description: Description of the product
        price:
          type: number
          format: float
          description: Price of the product
        category:
          type: string
          description: Category of the product
        subCategory:
          type: string
          description: Subcategory of the product
        brand:
          type: string
          description: Brand of the product
        specifications:
          type: array
          items:
            $ref: '#/components/schemas/SpecificationResource'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageResource'
        stock:
          type: integer
          format: int64
          description: Available stock for the product
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the product
        variants:
          type: array
          items:
            $ref: '#/components/schemas/VariantResource'
    SpecificationResource:
      type: object
      properties:
        key:
          type: string
          description: Specification key
        value:
          type: string
          description: Specification value
    ImageResource:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: URL of the product image
    VariantResource:
      type: object
      properties:
        color:
          type: string
          description: Color of the product variant
        stock:
          type: integer
          format: int64
          description: Available stock for the variant
    ProductCriteria:
      type: object
      properties:
        name:
          type: string
        category:
          type: object
          properties:
            eq:
              type: string
        price:
          $ref: '#/components/schemas/SearchOperators'
        rating:
          $ref: '#/components/schemas/SearchOperators'
    SearchOperators:
      type: object
      properties:
        gt:
          type: number
          format: float
        lt:
          type: number
          format: float
        eq:
          type: number
          format: float
